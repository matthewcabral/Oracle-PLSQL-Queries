BEGIN
    -- Backups (Executados pelo Nishi)
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_PROC AS SELECT * FROM SIEBEL.S_WFR_PROC;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_PROC_PROP AS SELECT * FROM SIEBEL.S_WFR_PROC_PROP;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_STP AS SELECT * FROM SIEBEL.S_WFR_STP;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_STP_ARG AS SELECT * FROM SIEBEL.S_WFR_STP_ARG;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_STP_BRNCH AS SELECT * FROM SIEBEL.S_WFR_STP_BRNCH;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_PROC_FLOW AS SELECT * FROM SIEBEL.S_WFR_PROC_FLOW;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_COND_CRIT AS SELECT * FROM SIEBEL.S_WFR_COND_CRIT;
    -- CREATE TABLE SIEBEL.BKP20200914_S_WFR_COND_VAL AS SELECT * FROM SIEBEL.S_WFR_COND_VAL;
    
    -- ##############################
    
    /*
    S_WFR_PROC -- Repository Workflow Process
      S_WFR_PROC_PROP -- Repository WF Process Prop
      S_WFR_STP -- Repository WF Step
        S_WFR_STP_ARG -- Repository WF Step I/O Argument
        S_WFR_STP_BRNCH -- Repository WF Step Branch
          S_WFR_PROC_FLOW -- Repository WF Branch Connector
          S_WFR_COND_CRIT -- Repository WF Branch Criteria
            S_WFR_COND_VAL -- Repository WF Branch Criteria Value
    */
    
    DELETE FROM SIEBEL.S_WFR_COND_VAL VAL WHERE VAL.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND VAL.COND_CRIT_ID IN (
      SELECT CRIT.WS_SRC_ID FROM SIEBEL.S_WFR_COND_CRIT CRIT WHERE CRIT.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND CRIT.BRANCH_ID IN (
        SELECT BRNCH.WS_SRC_ID FROM SIEBEL.S_WFR_STP_BRNCH BRNCH WHERE BRNCH.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND BRNCH.STEP_ID IN (
          SELECT STP.WS_SRC_ID FROM SIEBEL.S_WFR_STP STP WHERE STP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND STP.PROCESS_ID IN (
            SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
          )
        )
      )
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_COND_CRIT CRIT WHERE CRIT.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND CRIT.BRANCH_ID IN (
      SELECT BRNCH.WS_SRC_ID FROM SIEBEL.S_WFR_STP_BRNCH BRNCH WHERE BRNCH.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND BRNCH.STEP_ID IN (
        SELECT STP.WS_SRC_ID FROM SIEBEL.S_WFR_STP STP WHERE STP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND STP.PROCESS_ID IN (
          SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
        )
      )
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_PROC_FLOW FLOW WHERE FLOW.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND FLOW.FOR_BRNCH_ID IN (
      SELECT BRNCH.WS_SRC_ID FROM SIEBEL.S_WFR_STP_BRNCH BRNCH WHERE BRNCH.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND BRNCH.STEP_ID IN (
        SELECT STP.WS_SRC_ID FROM SIEBEL.S_WFR_STP STP WHERE STP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND STP.PROCESS_ID IN (
          SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
        )
      )
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_STP_BRNCH BRNCH WHERE BRNCH.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND BRNCH.STEP_ID IN (
      SELECT STP.WS_SRC_ID FROM SIEBEL.S_WFR_STP STP WHERE STP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND STP.PROCESS_ID IN (
        SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
      )
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_STP_ARG ARG WHERE ARG.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND ARG.STEP_ID IN (
      SELECT STP.WS_SRC_ID FROM SIEBEL.S_WFR_STP STP WHERE STP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND STP.PROCESS_ID IN (
        SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
      )
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_STP STP WHERE STP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND STP.PROCESS_ID IN (
      SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_PROC_PROP UP WHERE UP.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND UP.PROCESS_ID IN (
      SELECT WF.WS_SRC_ID FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y')
    );
    COMMIT;
    
    DELETE FROM SIEBEL.S_WFR_PROC WF WHERE WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN') AND REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository') AND (WF.STATUS_CD <> 'COMPLETED' OR WF.INACTIVE_FLG = 'Y');
    COMMIT;
    
    -- ##############################
    
    UPDATE SIEBEL.S_WFR_PROC WF
       SET WF.NAME = WF.PROC_NAME||': '||WF.VERSION
     WHERE 1=1 --WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN')
       AND WF.REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository')
       AND WF.NAME LIKE '%: %: %';
    COMMIT;
    
    UPDATE SIEBEL.S_WFR_PROC WF
       SET WF.NAME = WF.PROC_NAME||': '||WF.VERSION
     WHERE 1=1 --WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN')
       AND WF.REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository')
       AND WF.NAME NOT LIKE WF.PROC_NAME||': %';
    COMMIT;
    
    UPDATE SIEBEL.S_WFR_PROC WF
       SET WF.NAME = WF.PROC_NAME||': '||WF.VERSION
     WHERE 1=1 --WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN')
       AND WF.REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository')
       AND WF.NAME <> WF.PROC_NAME||': '||WF.VERSION;
    COMMIT;
    
    UPDATE SIEBEL.S_WFR_PROC WF
       SET WF.VERSION = 0, WF.NAME = WF.PROC_NAME||': 0'
     WHERE 1=1 --WF.WS_ID = (SELECT ROW_ID FROM SIEBEL.S_WORKSPACE WHERE NAME = 'MAIN')
       AND WF.REPOSITORY_ID = (SELECT ROW_ID FROM SIEBEL.S_REPOSITORY WHERE NAME = 'Siebel Repository')
       AND WF.VERSION <> 0;
    COMMIT;

  EXCEPTION WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE ('Error '||SQLCODE||': '||SQLERRM);

END;